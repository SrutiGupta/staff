
datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model Staff {
  id          Int          @id @default(autoincrement())
  email       String       @unique
  name        String?
  password    String
  createdAt   DateTime     @default(now())
  updatedAt   DateTime     @updatedAt
  attendances Attendance[]
}

model Attendance {
  id         Int       @id @default(autoincrement())
  staff      Staff     @relation(fields: [staffId], references: [id])
  staffId    Int
  loginTime  DateTime  @default(now())
  logoutTime DateTime?
}

model Patient {
  id             Int        @id @default(autoincrement())
  name           String
  age            Int
  gender         String
  medicalHistory String?
  createdAt      DateTime   @default(now())
  updatedAt      DateTime   @updatedAt
  royalty        Royalty?
  giftCards      GiftCard[]
  invoices       Invoice[]
}

model Royalty {
  id        Int      @id @default(autoincrement())
  points    Int      @default(0)
  patient   Patient  @relation(fields: [patientId], references: [id])
  patientId Int      @unique
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model GiftCard {
  id           Int           @id @default(autoincrement())
  code         String        @unique
  balance      Float
  patient      Patient       @relation(fields: [patientId], references: [id])
  patientId    Int
  createdAt    DateTime      @default(now())
  updatedAt    DateTime      @updatedAt
  transactions Transaction[]
}

model Product {
  id           Int           @id @default(autoincrement())
  name         String
  description  String?
  price        Float
  barcode      String?       @unique
  createdAt    DateTime      @default(now())
  updatedAt    DateTime      @updatedAt
  inventory    Inventory[]
  invoiceItems InvoiceItem[]
}

model Inventory {
  id        Int      @id @default(autoincrement())
  product   Product  @relation(fields: [productId], references: [id])
  productId Int
  quantity  Int
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Invoice {
  id            String        @id @default(cuid())
  patient       Patient       @relation(fields: [patientId], references: [id])
  patientId     Int
  totalAmount   Float
  paidAmount    Float         @default(0)
  status        String        @default("UNPAID") // e.g., UNPAID, PAID, PARTIALLY_PAID
  createdAt     DateTime      @default(now())
  updatedAt     DateTime      @updatedAt
  items         InvoiceItem[]
  transactions  Transaction[]
}

model InvoiceItem {
  id        Int     @id @default(autoincrement())
  invoice   Invoice @relation(fields: [invoiceId], references: [id])
  invoiceId String
  product   Product @relation(fields: [productId], references: [id])
  productId Int
  quantity  Int
  unitPrice Float // Price at the time of sale
  totalPrice Float
}

model Transaction {
  id            Int       @id @default(autoincrement())
  invoice       Invoice   @relation(fields: [invoiceId], references: [id])
  invoiceId     String
  amount        Float
  paymentMethod String // e.g., CASH, CREDIT_CARD, GIFT_CARD
  createdAt     DateTime  @default(now())
  giftCard      GiftCard? @relation(fields: [giftCardId], references: [id])
  giftCardId    Int?
}
